{
  "$schema": "https://json.schemastore.org/template",
  "author": "BUTR Team",
  "classifications": [
    "Bannerlord",
    "Games",
    "Windows",
    "Desktop",
    "Xbox"
  ],
  "name": "Mount & Blade 2: Bannerlord Module (BUTR Sdk)",
  "generatorVersions": "[1.0.0.0-*)",
  "description": "Project template for Mount & Blade 2: Bannerlord with BUTR's Sdk.",
  "groupIdentity": "Bannerlord.Module.Sdk",
  "precedence": "5000",
  "identity": "Bannerlord.Module.Sdk.CSharp",
  "shortName": "blmodsdk",
  "tags": {
    "language": "C#",
    "type": "project"
  },
  "sourceName": "BLNamespace",
  "preferNameDirectory": true,
  "guids": [
    "84889846-e8dd-4c24-a8ee-0099a0573896"
  ],
  "symbols": {
    "gameWindows": {
      "type": "parameter",
      "datatype": "bool",
      "description": "Target the Steam/GOG/Epic version of the game",
      "defaultValue": "true",
      "replaces": "$(ProjectBuildForWindows)"
    },
    "gameWindowsStore": {
      "type": "parameter",
      "datatype": "bool",
      "description": "Target the Windows Game Pass PC version of the game",
      "defaultValue": "true",
      "replaces": "$(ProjectBuildForWindowsStore)"
    },
    
    "gameFolder": {
      "type": "parameter",
      "dataType": "string",
      "description": "Path to Bannerlord's game folder",
      "defaultValue": "$(BANNERLORD_GAME_DIR)",
      "replaces": "$(ProjectGameFolder)",
      "forms": {
        "global": [
          "encode"
        ]
      }
    },
    
    "moduleId": {
      "type": "parameter",
      "dataType": "string",
      "description": "Module's internal id",
      "defaultValue": "$(MSBuildProjectName)",
      "replaces": "$(ProjectModuleId)"
    },
    "moduleName": {
      "type": "parameter",
      "dataType": "string",
      "description": "Module's display name",
      "defaultValue": "$(MSBuildProjectName)",
      "replaces": "$(ProjectModuleName)"
    },
    "moduleUrl": {
      "type": "parameter",
      "dataType": "string",
      "description": "Module's url to it's public page (NexusMods, Steam Workshop, GitHub)",
      "defaultValue": "",
      "replaces": "$(ProjectModuleUrl)"
    },
    
    "InstallModuleLoader": {
      "type": "parameter",
      "datatype": "choice",
      "description": "Specifies if the community Module Loader should be used. It provides support for multiple game versions within one module",
      "choices": [
        {
          "choice": "do-not-install",
          "description": "Do not install the community Module Loader"
        },
        {
          "choice": "install",
          "description": "Install the community Module Loader"
        }
      ],
      "defaultValue": "do-not-install"
    },
    "InstallHarmony": {
      "type": "parameter",
      "dataType": "choice",
      "description": "Specifies if Harmony should be installed",
      "choices": [
        {
          "choice": "do-not-install",
          "description": "Do not install Harmony"
        },
        {
          "choice": "hard-dependency",
          "description": "Install Harmony and reference it in SubModules.xml"
        }
      ],
      "defaultValue": "hard-dependency"
    },
    "InstallButterLib": {
      "type": "parameter",
      "dataType": "choice",
      "description": "Specifies if Bannerlord.ButterLib should be installed",
      "choices": [
        {
          "choice": "do-not-install",
          "description": "Do not install Bannerlord.ButterLib"
        },
        {
          "choice": "hard-dependency",
          "description": "Install Bannerlord.UIExtenderEx and reference it in SubModules.xml"
        }
      ],
      "defaultValue": "do-not-install"
    },
    "InstallUIExtenderEx": {
      "type": "parameter",
      "dataType": "choice",
      "description": "Specifies if Bannerlord.UIExtenderEx should be installed",
      "choices": [
        {
          "choice": "do-not-install",
          "description": "Do not install Bannerlord.UIExtenderEx"
        },
        {
          "choice": "hard-dependency",
          "description": "Install Bannerlord.UIExtenderEx and reference it in SubModules.xml"
        }
      ],
      "defaultValue": "do-not-install"
    },
    "InstallMCM": {
      "type": "parameter",
      "datatype": "choice",
      "description": "Specifies if Mod Configuration Menu (MCM) should be installed",
      "choices": [
        {
          "choice": "do-not-install",
          "description": "Do not install Bannerlord.MCM"
        },
        {
          "choice": "hard-dependency",
          "description": "Install Bannerlord.MCM and reference it in SubModules.xml"
        },
        {
          "choice": "soft-dependency",
          "description": "Install Bannerlord.MCM and reference only ButterLib in SubModules.xml"
        }
      ],
      "defaultValue": "do-not-install"
    },
    
    "RequireBLSEFeatures": {
      "type": "parameter",
      "dataType": "choice",
      "description": "Require Bannerlord Software Extender (BLSE) Features",
      "allowMultipleValues": true,
      "choices": [
        {
          "choice": "do-not-require-anything",
          "description": "Do not require BLSE Features."
        },
        {
          "choice": "loading-interceptor",
          "description": "Loading Interceptor. Gives earlier control for Modules."
        },
        {
          "choice": "assembly-resolver",
          "description": "Assembly Resolver. Changes the game's assembly loading priority."
        }
      ],
      "defaultValue": "do-not-require-anything"
    },
   
    "langVersion": {
      "type": "parameter",
      "datatype": "text",
      "description": "Sets the LangVersion property in the created project file",
      "defaultValue": "10.0",
      "replaces": "$(ProjectLanguageVersion)"
    },
    "nullable": {
      "type": "parameter",
      "datatype": "bool",
      "description": "If specified, enables the Nullable property in the created project file",
      "defaultValue": "false"
    },
    "skipRestore": {
      "type": "parameter",
      "datatype": "bool",
      "description": "If specified, skips the automatic restore of the project on create.",
      "defaultValue": "false"
    },
    
    "ReferenceHarmony": {
      "type": "computed",
      "value": "(InstallHarmony == \"hard-dependency\" || InstallButterLib == \"hard-dependency\" || InstallUIExtenderEx == \"hard-dependency\" || InstallMCM == \"hard-dependency\" || InstallMCM == \"soft-dependency\" || InstallModuleLoader == \"install\")"
    },
    "ReferenceButterLib": {
      "type": "computed",
      "value": "(InstallButterLib == \"hard-dependency\" || InstallMCM == \"hard-dependency\")"
    },
    "ReferenceUIExtenderEx": {
      "type": "computed",
      "value": "(InstallUIExtenderEx == \"hard-dependency\" || InstallMCM == \"hard-dependency\")"
    },
    "ReferenceMCM": {
      "type": "computed",
      "value": "(InstallMCM == \"hard-dependency\" || InstallMCM == \"soft-dependency\")"
    },
    "ReferenceMCMAsSoftDependency": {
      "type": "computed",
      "value": "(InstallMCM == \"soft-dependency\")"
    },
    "ReferenceModuleLoader": {
      "type": "computed",
      "value": "(InstallModuleLoader == \"install\")"
    },
    
    "RunHarmony": {
      "type": "computed",
      "value": "(InstallHarmony == \"hard-dependency\" || InstallButterLib == \"hard-dependency\" || InstallUIExtenderEx == \"hard-dependency\" || InstallMCM == \"hard-dependency\" || InstallMCM == \"soft-dependency\" || InstallModuleLoader == \"install\" || AddBLSELoadingInterceptor == \"true\" || AddBLSEAssemblyResolver == \"true\")"
    },
    "RunButterLib": {
      "type": "computed",
      "value": "(InstallButterLib == \"hard-dependency\" || InstallMCM == \"hard-dependency\")"
    },
    "RunUIExtenderEx": {
      "type": "computed",
      "value": "(InstallUIExtenderEx == \"hard-dependency\" || InstallMCM == \"hard-dependency\")"
    },
    "RunMCM": {
      "type": "computed",
      "value": "(InstallMCM == \"hard-dependency\")"
    },
    
    "AddBLSELoadingInterceptor": {
      "type": "computed",
      "value": "(RequireBLSEFeatures == \"loading-interceptor\")"
    },
    "AddBLSEAssemblyResolver": {
      "type": "computed",
      "value": "(RequireBLSEFeatures == \"assembly-resolver\")"
    },

    "HostIdentifier": {
      "type": "bind",
      "binding": "HostIdentifier"
    }
  },
  "forms": {
    "encode": {
      "identifier": "xmlEncode"
    }
  },
  "defaultName": "Bannerlord.Module1",
  "primaryOutputs": [
    {
      "path": "BLNamespace.csproj"
    },
    {
      "condition":"(HostIdentifier != \"dotnetcli\" && HostIdentifier != \"dotnetcli-preview\")",
      "path":"SubModule.cs"
    }
  ],
  "postActions": [
    {
      "condition": "(!skipRestore)",
      "description": "Restore NuGet packages required by this project.",
      "manualInstructions": [
        {
          "text": "Run 'dotnet restore'"
        }
      ],
      "actionId": "210D431B-A78B-4D2F-B762-4ED3E3EA9025",
      "continueOnError": true
    },
    {
      "condition":"(HostIdentifier != \"dotnetcli\" && HostIdentifier != \"dotnetcli-preview\")",
      "description":"Opens SubModule.cs in the editor",
      "manualInstructions":[
        
      ],
      "actionId":"84C0DA21-51C8-4541-9940-6CA19AF04EE6",
      "args":{
        "files":"1"
      },
      "continueOnError":true
    }
  ],
  "SpecialCustomOperations": {
    "**/*.json": {
      "flagPrefix": "//",
      "operations": [
        {
          "type": "conditional",
          "configuration": {
            "if": [
              "//#if"
            ],
            "else": [
              "//#else"
            ],
            "elseif": [
              "//#elseif"
            ],
            "endif": [
              "//#endif"
            ],
            "actionableIf": [
              "////#if"
            ],
            "actionableElse": [
              "////#else"
            ],
            "actionableElseif": [
              "////#elseif"
            ],
            "actions": [
              "cStyleUncomment",
              "cStyleReduceComment"
            ],
            "trim": true,
            "wholeLine": false,
            "evaluator": "C++"
          }
        }
      ]
    }
  }
}