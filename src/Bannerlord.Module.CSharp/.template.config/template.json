{
  "$schema":"http://json.schemastore.org/template",
  "author":"BUTR Team",
  "classifications":[
    "Bannerlord"
  ],
  "name":"Mount & Blade 2: Bannerlord Module",
  "description":"Project template for Mount & Blade 2: Bannerlord.",
  "groupIdentity":"Bannerlord.Module",
  "precedence":"5000",
  "identity":"Bannerlord.Module.CSharp",
  "shortName":"blmodfx",
  "tags":{
    "language":"C#",
    "type":"project"
  },
  "sourceName":"BLNamespace",
  "preferNameDirectory":"true",
  "symbols":{
    "Framework":{
      "type":"parameter",
      "description":"The target framework for the project.",
      "datatype":"choice",
      "choices":[
        {
          "choice":"net472",
          "description":"Target .NET Framework 4.7.2"
        },
        {
          "choice":"netstandard2.0",
          "description":"Target .NET Standard 2.0"
        }
      ],
      "replaces":"net472",
      "defaultValue":"net472"
    },
    "gameFolder":{
      "type":"parameter",
      "dataType":"string",
      "description":"Path to Bannerlord's game folder",
      "defaultValue":"$(BANNERLORD_GAME_DIR)",
      "replaces":"$(ProjectGameFolder)",
      "forms":{
        "global":[
          "encode"
        ]
      }
    },
    "moduleName":{
      "type":"parameter",
      "dataType":"string",
      "description":"Module's name",
      "defaultValue":"$(MSBuildProjectName)",
      "replaces":"$(ProjectModuleName)"
    },
    "installHarmony":{
      "type":"parameter",
      "dataType":"choice",
      "description":"Specifies if Harmony should be installed",
      "choices":[
        {
          "choice":"do-not-install",
          "description":"Do not install Harmony"
        },
        {
          "choice":"hard-dependency",
          "description":"Install Harmony and reference it in SubModules.xml"
        }
      ],
      "defaultValue":"hard-dependency"
    },
    "installButterLib":{
      "type":"parameter",
      "dataType":"choice",
      "description":"Specifies if Bannerlord.ButterLib should be installed",
      "choices":[
        {
          "choice":"do-not-install",
          "description":"Do not install Bannerlord.ButterLib"
        },
        {
          "choice":"hard-dependency",
          "description":"Install Bannerlord.UIExtenderEx and reference it in SubModules.xml"
        }
      ],
      "defaultValue":"do-not-install"
    },
    "installUIExtenderEx":{
      "type":"parameter",
      "dataType":"choice",
      "description":"Specifies if Bannerlord.UIExtenderEx should be installed",
      "choices":[
        {
          "choice":"do-not-install",
          "description":"Do not install Bannerlord.UIExtenderEx"
        },
        {
          "choice":"hard-dependency",
          "description":"Install Bannerlord.UIExtenderEx and reference it in SubModules.xml"
        }
      ],
      "defaultValue":"do-not-install"
    },
    "installMCM":{
      "type":"parameter",
      "datatype":"choice",
      "description":"Specifies if Mod Configuration Menu (MCM) should be installed",
      "choices":[
        {
          "choice":"do-not-install",
          "description":"Do not install Bannerlord.MCM package"
        },
        {
          "choice":"hard-dependency",
          "description":"Install Bannerlord.MCM and reference it in SubModules.xml"
        },
        {
          "choice":"soft-dependency",
          "description":"Install Bannerlord.MCM and reference only ButterLib in SubModules.xml"
        }
      ],
      "defaultValue":"do-not-install"
    },
    "langVersion":{
      "type":"parameter",
      "datatype":"text",
      "description":"Sets the LangVersion property in the created project file",
      "defaultValue":"8.0",
      "replaces":"$(ProjectLanguageVersion)"
    },
    "nullable":{
      "type":"parameter",
      "datatype":"bool",
      "description":"If specified, enables the Nullable property in the created project file",
      "defaultValue":"false"
    },
    "ReferenceHarmony":{
      "type":"computed",
      "value":"(installHarmony == \"hard-dependency\" || installButterLib == \"hard-dependency\" || installUIExtenderEx == \"hard-dependency\" || installMCM == \"hard-dependency\" || installMCM == \"soft-dependency\")"
    },
    "ReferenceButterLib":{
      "type":"computed",
      "value":"(installButterLib == \"hard-dependency\" || installMCM == \"hard-dependency\" || installMCM == \"soft-dependency\")"
    },
    "ReferenceUIExtenderEx":{
      "type":"computed",
      "value":"(installUIExtenderEx == \"hard-dependency\" || installMCM == \"hard-dependency\")"
    },
    "ReferenceMCM":{
      "type":"computed",
      "value":"(installMCM == \"hard-dependency\" || installMCM == \"soft-dependency\")"
    }
  },
  "forms":{
    "encode":{
      "identifier":"xmlEncode"
    }
  },
  "defaultName":"Bannerlord.Module1",
  "primaryOutputs":[
    {
      "path":"BLNamespace.csproj"
    },
    {
      "condition":"(HostIdentifier != \"dotnetcli\")",
      "path":"SubModule.cs"
    }
  ],
  "postActions":[
    {
      "description":"Restore NuGet packages required by this project.",
      "manualInstructions":[
        {
          "text":"Run 'dotnet restore'"
        }
      ],
      "actionId":"210D431B-A78B-4D2F-B762-4ED3E3EA9025",
      "continueOnError":true
    },
    {
      "condition":"(HostIdentifier != \"dotnetcli\")",
      "description":"Opens SubModule.cs in the editor",
      "manualInstructions":[
        
      ],
      "actionId":"84C0DA21-51C8-4541-9940-6CA19AF04EE6",
      "args":{
        "files":"1"
      },
      "continueOnError":true
    }
  ],
  "SpecialCustomOperations":{
    "**/*.xml":{
      "operations":[
        {
          "type":"conditional",
          "configuration":{
            "if":[
              "---#if"
            ],
            "else":[
              "---#else"
            ],
            "elseif":[
              "---#elseif",
              "---#elif"
            ],
            "endif":[
              "---#endif"
            ],
            "trim":"true",
            "wholeLine":"true"
          }
        }
      ]
    },
    "**/*.json":{
      "flagPrefix":"//",
      "operations":[
        {
          "type":"conditional",
          "configuration":{
            "if":[
              "//#if"
            ],
            "else":[
              "//#else"
            ],
            "elseif":[
              "//#elseif"
            ],
            "endif":[
              "//#endif"
            ],
            "actionableIf":[
              "////#if"
            ],
            "actionableElse":[
              "////#else"
            ],
            "actionableElseif":[
              "////#elseif"
            ],
            "actions":[
              "cStyleUncomment",
              "cStyleReduceComment"
            ],
            "trim":true,
            "wholeLine":false,
            "evaluator":"C++"
          }
        }
      ]
    }
  }
}
